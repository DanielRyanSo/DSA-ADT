#define MAX 10
#include <stdio.h>
#include <stdlib.h>

typedef struct{
    int elem[MAX];
    int count;
} Etype, *EPtr;

void initialize(EPtr change){
    change->count = 0;
}

void insertPos(EPtr insert, int data, int position){
    for(int i = insert->count - 1; i >= position; i--){
        insert->elem[i + 1] = insert->elem[i];
    }
    insert->elem[position] = data;
    insert->count++;

}

void deletePos(EPtr L, int position){
    for(int i = L->count ; i >= position ;i--){
     if(i-1 != position){
         L->elem[i] = L->elem[i+1]; 
     }
     }
     L->count--;
    }

int locate(EPtr L, int data){
    for(int i = 0; i < L->count; i++){
        if(L->elem[i] == data){
            return i;
        }
    }
    return -1;
}

void sort(EPtr L){
    int temp;
    for(int i = 0; i < L->count; i++){
        for(int j = 0; j < L->count - 1 - i; j++){
            if(L->elem[j] > L->elem[j + 1]){
                temp = L->elem[j + 1];
                L->elem[j + 1] = L->elem[j];
                L->elem[j] = temp;
            }
        }
    }
}

void insertSorted(EPtr L, int data){
    int pos = 0;
    for(int i = 0; i < L->count; i++){
        if(L->elem[i] < data){
            pos = i + 1;
        } else {
            break;
        }
    }
    for(int i = L->count - 1; i >= pos; i--){
        L->elem[i + 1] = L->elem[i];
    }
    L->elem[pos] = data;
    L->count++;
}

void display(EPtr L){
    for(int i = 0; i < L->count; i++){
        printf("%d ", L->elem[i]);
    }
    printf("\n");
}

int main(){
    Etype list;
    EPtr L = &list; 
    initialize(L);
    printf("Initial count: %d\n", L->count);

    L->elem[0] = 1;
    L->elem[1] = 3;
    L->elem[2] = 2;
    L->elem[3] = 5;
    L->count = 4;

    printf("Before: ");
    display(L);

    insertPos(L, 4, 2);
    insertPos(L, 1, 3);
   
    printf("After insertPos: ");
    display(L);
    
    deletePos(L, 4);
    
    printf("After deletePos: ");
    display(L);

    int position = locate(L, 3);
    printf("Position of 3: %d\n", position);

    sort(L);
    printf("Sorted: ");
    display(L);

    insertSorted(L, 9);
    printf("After insertSorted: ");
    display(L);

    return 0;
}
